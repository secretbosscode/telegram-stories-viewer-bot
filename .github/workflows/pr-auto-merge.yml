name: Auto resolve PR conflicts

on:
  workflow_dispatch:
  pull_request_target:
    types: [opened, synchronize]
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  resolve:
    if: github.event_name == 'pull_request_target'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Merge base branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git merge -X ours --no-edit origin/${{ github.event.pull_request.base.ref }} || true
          git push origin HEAD:${{ github.event.pull_request.head.ref }}

  update-open-prs:
    if: github.event_name == 'push'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Merge main into open PRs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          for branch in $(gh pr list --state open --json headRefName --jq '.[].headRefName'); do
            git fetch origin "$branch"
            git checkout "$branch"
            git merge -X ours --no-edit origin/main || true
            git push origin HEAD:"$branch"
          done

